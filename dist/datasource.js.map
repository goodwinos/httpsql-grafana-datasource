{"version":3,"sources":["../src/datasource.js"],"names":["DEFAULT","HttpsqlDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","withCredentials","headers","basicAuth","length","metricParamList","options","period","from","range","Date","getTime","to","target_list","targets","filter","target","alias","metric","hide","Promise","resolve","data","url_list","map","forEach","param","param_list","indexOf","push","params","p","join","self","scope","doRequest","all","then","results","result","i","res","columns","Object","keys","datatype","c","text","rows","e","label","status","message","title","metrics","desc","substring","split","trim","sort","method","datasourceRequest"],"mappings":"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","file":"datasource.js","sourcesContent":["var DEFAULT = '* select *';\n\nexport class HttpsqlDatasource {\n\n\tconstructor(instanceSettings, $q, backendSrv, templateSrv) {\n\t\tthis.type = instanceSettings.type;\n\t\tthis.url = instanceSettings.url;\n\t\tthis.name = instanceSettings.name;\n\t\tthis.q = $q;\n\t\tthis.backendSrv = backendSrv;\n\t\tthis.templateSrv = templateSrv;\n\t\tthis.withCredentials = instanceSettings.withCredentials;\n\t\tthis.headers = {'Content-Type': 'application/json'};\n\t\tif (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) \n\t\t\tthis.headers['Authorization'] = instanceSettings.basicAuth;\n\n\t\tthis.metricParamList = {};\n\t}\n\n\tquery(options) {\n\t\tvar period = {\n\t\t\tfrom: options.range && options.range.from && new Date(options.range.from).getTime(),\n\t\t\tto: options.range && options.range.to && new Date(options.range.to).getTime()\n\t\t}\n\t\t\n\t\tvar target_list = options.targets.filter((target) => target.alias && target.alias != DEFAULT && target.metric && target.metric != DEFAULT && !target.hide);\n\t\tif (target_list.length == 0)\t\n\t\t\treturn Promise.resolve({data: []});\n\n\t\t\n\t\tlet url_list = target_list.map(function (target) {\n\t\t\t['from', 'to'].forEach(function (param) {\n\t\t\t\ttarget[param] = target[param] || period[param];\n\t\t\t\tif (target.param_list.indexOf(param) == -1)\n\t\t\t\t\ttarget.param_list.push(param);\n\t\t\t})\n\t\t\tvar params = target.param_list.map((p) => p + '=' + (target.params[p] || '')).join('&') || '';\n\t\t\treturn `/${target.alias}/${target.metric}?${params}&table=t&json`;\n\t\t});\n\n\t\tvar self = this;\t\t\n\t\tvar scope = url_list.map((url) => this.doRequest(url));\n\t\n\t\treturn Promise.all(scope).then(function (results) {\n\t\t\tvar data =  [];\n\t\t\t\n\t\t\tresults.forEach(function (result, i) {\n\t\t\t\tvar res = result.data || [];\n\t\t\t\tif (res.length == 0)\n\t\t\t\t\treturn;\n\t\t\t\t\n\t\t\t\tvar target = target_list[i];\n\t\t\t\tvar columns = Object.keys(res[0]);\n\n\t\t\t\tif (target.datatype == 'table') {\n\t\t\t\t\tdata.push({\n\t\t\t\t\t\tcolumns: columns.map((c) => new Object({text: c, type: c.indexOf('time') != -1 ? 'time' : 'string'})),\n\t\t\t\t\t\trows: res.map((e, i) => columns.map((c) => res[i][c])),\n\t\t\t\t\t\ttype: 'table'\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tdata.push({\n\t\t\t\t\t\ttarget: target.label || `${target.alias}/${target.metric}`,\n\t\t\t\t\t\trows: res.map((e, i) => columns.map((c) => res[i][c])),\n\t\t\t\t\t\ttype: 'timeserie'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t});\n\n\t\t\treturn Promise.resolve({data});\n\t\t})\n\t\n\t}\n\n\ttestDatasource() {\n\t\treturn this.doRequest('/')\n\t\t\t.then(res => res.status == 200 ? {status: 'success', message: 'OK', title: 'Success'} : {status: 'error', message: 'Fail', title: 'Error'});\n\t}\n\n\tgetAliasList () {\n\t\treturn this.doRequest('/').then((res) => res.data);\n\t}\n\n\tgetMetricList(alias) {\n\t\tif (alias == DEFAULT)\n\t\t\treturn Promise.resolve([]);\n\n\t\tvar self = this;\n\t\treturn this.doRequest('/' + alias)\n\t\t\t.then(function (res) {\n\t\t\t\tvar metrics = res.data;\n\t\t\t\tfor (var metric in metrics) {\n\t\t\t\t\tif (!self.metricParamList[metric]) {\n\t\t\t\t\t\tvar desc = metrics[metric] || '';\n\t\t\t\t\t\tself.metricParamList[metric] = desc.substring(desc.indexOf(':') + 1, desc.indexOf('.')).split(',').map((e) => e.trim()).sort();\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\treturn Object.keys(metrics);\n\t\t\t});\n\t}\n\n\tgetMetricParamList(metric) {\n\t\treturn this.metricParamList[metric] || [];\n\t}\n\n\tdoRequest(url) {\n\t\tvar options = {\n\t\t\turl: this.url + url,\n\t\t\twithCredentials: this.withCredentials,\n\t\t\theaders: this.headers,\n\t\t\tmethod: 'GET'\n\t\t}\n\t\t\n\t\treturn this.backendSrv.datasourceRequest(options);\n\t}\n}\n"]}